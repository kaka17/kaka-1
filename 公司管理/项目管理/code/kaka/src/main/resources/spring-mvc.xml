<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		  http://www.springframework.org/schema/context 
		  http://www.springframework.org/schema/context/spring-context-3.1.xsd
		  http://www.springframework.org/schema/aop 
		  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		  http://www.springframework.org/schema/tx 
		  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		  http://www.springframework.org/schema/mvc 
		  http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		  http://www.springframework.org/schema/context 
		  http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		  
	<context:annotation-config />
	<!-- 扫描包 不配置扫描包，那么找不到controller注解 -->
	<context:component-scan base-package="com.ecs.*" />

	<!-- jsp视图映射 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property>
        <property name="suffix" value=".html"></property>
        <property name="order" value="1"></property>
    </bean>
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.ecs.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	 <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="loginInterceptor" class="com.ecs.interceptor.OnlineInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
     <context:property-placeholder location="classpath:sysConfigure.properties"/>
     <!-- 数据源 -->
    <bean name="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc_initialSize}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${jdbc_maxActive}" />
        <!-- 连接池最大空闲  -->
        <property name="maxIdle" value="${jdbc_maxIdle}" />
        
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc_minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <!-- 以下两条需要注释 
        <property name="poolPreparedStatements" value="true" /> 
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
        -->
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>
    
    <!-- JDBC配置 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>
    
    <!-- 定义事务管理器（声明式的事务）-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="validateExistingTransaction" value="true" />
    </bean>

    <aop:config>
        <aop:pointcut id="interceptorPointCuts"
                      expression="execution(* com.ecs..service.impl.*.*(..))" />
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="interceptorPointCuts" />
    </aop:config>

    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="create*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="del*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="exec*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="edit*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRED"   rollback-for="java.lang.Exception"/>
            <tx:method name="get*" propagation="SUPPORTS"   rollback-for="java.lang.Exception"/>
            <tx:method name="find*" propagation="SUPPORTS"   rollback-for="java.lang.Exception"/>
            <tx:method name="query*" propagation="SUPPORTS"   rollback-for="java.lang.Exception"/>
            <tx:method name="read*" propagation="SUPPORTS"   rollback-for="java.lang.Exception"/>
            <tx:method name="*" propagation="SUPPORTS"   rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
    
    
    <aop:aspectj-autoproxy />
</beans>